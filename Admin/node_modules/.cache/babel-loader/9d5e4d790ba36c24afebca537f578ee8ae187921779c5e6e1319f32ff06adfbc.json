{"ast":null,"code":"import React,{useEffect,useMemo,useRef,useState}from'react';import{GoogleMap,Marker,MarkerF,Polyline,useLoadScript,DistanceMatrixService,DistanceMatrixServiceProps,LoadScript,PolylineF,PolygonF}from'@react-google-maps/api';import{setDefaults,geocode,RequestType}from'react-geocode';import{useGeolocated}from'react-geolocated';import*as turf from'@turf/turf';// import { AuthCtx } from \"../../context/CreateContext\";\nimport{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";const containerStyle={width:'1600px',height:'1200px',marginTop:'10px'};const GogleMapNew=_ref=>{let{startPoint,setStartPoint,endPoint,setendPoint,settimeAndDistanceObj,iamFrom,markerlatlng,setMarkerlatLng,setAddress,setLongitude,setaLatitude}=_ref;console.log('start&EndPoint',endPoint,startPoint,markerlatlng);const{coords,isGeolocationAvailable,isGeolocationEnabled}=useGeolocated({positionOptions:{enableHighAccuracy:true},userDecisionTimeout:5000});console.log('coords',markerlatlng,coords,coords===null||coords===void 0?void 0:coords.latitude,coords===null||coords===void 0?void 0:coords.longitude);//for current location\nconst userLatLng={lat:coords===null||coords===void 0?void 0:coords.latitude,lng:coords===null||coords===void 0?void 0:coords.longitude};const[searchPlace,setSearchPlace]=useState();const[coordinates,setCoordinates]=useState([]);const[jobsiteDetail,setJobsiteDetial]=useState(null);const[areaName,setareaName]=useState('');const[location,setLocation]=useState('');const[map,setMap]=useState(null);const[streetviews,setStreetView]=useState([{lat:22.5734215,lng:88.4320514},{lat:22.5731111,lng:77.3320514}// Add more points as needed\n]);console.log(streetviews,'kjfhsh');const DistanceCalculate=()=>{if(startPoint&&endPoint){console.log(startPoint,endPoint,'uuhe');const point1=turf.point([startPoint.lat,startPoint.lng]);const point2=turf.point([endPoint.lat,endPoint.lng]);// Calculate distance in kilometers\nconst distance=turf.distance(point1,point2);alert(distance);}};const decode=t=>{let points=[];for(let step of t){let encoded=step.polyline.points;let index=0,len=encoded.length;let lat=0,lng=0;while(index<len){let b,shift=0,result=0;do{b=encoded.charAt(index++).charCodeAt(0)-63;result|=(b&0x1f)<<shift;shift+=5;}while(b>=0x20);let dlat=(result&1)!=0?~(result>>1):result>>1;lat+=dlat;shift=0;result=0;do{b=encoded.charAt(index++).charCodeAt(0)-63;result|=(b&0x1f)<<shift;shift+=5;}while(b>=0x20);let dlng=(result&1)!=0?~(result>>1):result>>1;lng+=dlng;points.push({latitude:lat/1e5,longitude:lng/1e5});}}return points;};//for geting distance and path\nconst getAllLocationDatas=()=>{console.log('startPoint',startPoint);const apikey='AIzaSyAMkH3YDYb_ZJJvtuuEl_Grwc6u9U_yuSM';const directionsServiceBaseUrl='https://maps.googleapis.com/maps/api/directions/json';const url=\"\".concat(directionsServiceBaseUrl,\"?origin=\").concat(startPoint.lat,\",\").concat(startPoint.lng,\"&destination=\").concat(endPoint.lat,\",\").concat(endPoint.lng,\"&key=\").concat(apikey,\"&mode=driving&language=English\");console.log('url',url);fetch(url).then(response=>response.json()).then(json=>{// if (json.status !== 'OK') {\n//     const errorMessage = json.error_message || json.status || 'Unknown error';\n//     return Promise.reject(errorMessage);\n// }\nconsole.log('ppwqo',json.routes[0].legs[0]);if(json.routes.length){const route=json.routes[0];const decodepkey=route.overview_polyline;const decodepolyCode=decode([{polyline:decodepkey}]);setStreetView(decodepolyCode);settimeAndDistanceObj(json.routes[0].legs[0]);console.log('rrrw',decodepolyCode);}}).catch(err=>{console.log(err);// alert(err)\n});};useEffect(()=>{let temparr=[];temparr.push(startPoint);temparr.push(endPoint);// setPath(temparr)\nconsole.log('startPoints',startPoint,endPoint);console.log(endPoint,startPoint);if(startPoint){startPoint&&getAllLocationDatas();}// endPoint && startPoint && DistanceCalculate()\n},[endPoint]);const[center,setCenter]=useState({lat:37.0902,lng:95.7129});// const { setAddress, address } = AuthCtx();\nconsole.log('AAAAASD',markerlatlng);const[zipcode,setZipcode]=useState('');const{isLoaded}=useLoadScript({id:'google-map-script',googleMapsApiKey:'AIzaSyC-ki3ImgxYzo8K2OCH9yDthHWIWV1yfj4'// libraries: [\"places\"],\n});const onLoad=React.useCallback(function callback(map){// alert('jfjdkfjd')\nsetMap(map);map.setZoom(12);console.log('address',\"\".concat(center.lat,\",\").concat(center.lng));let obj={...markerlatlng};obj.lat=coords===null||coords===void 0?void 0:coords.latitude;obj.lng=coords===null||coords===void 0?void 0:coords.longitude;setMarkerlatLng(obj);setCenter(obj);geocode(RequestType.LATLNG,\"\".concat(center.lat,\",\").concat(center.lng)).then(_ref2=>{let{results}=_ref2;const address=results[0].formatted_address;setareaName(address);});},[center,coords]);const onUnmount=React.useCallback(function callback(map){alert('Hii');setMap(null);setCenter({lat:37.0902,lng:95.7129});},[]);// console.log(\"markerlatlng\", markerlatlng);\nsetDefaults({key:'AIzaSyC-ki3ImgxYzo8K2OCH9yDthHWIWV1yfj4',language:'en',region:'es'});// useEffect(() => {\n//     let obj = {\n//         latLng: markerlatlng,\n//         area: areaName,\n//         zipcode: zipcode,\n//     };\n//     // setAddress(obj);\n// }, [areaName, markerlatlng]);\nuseEffect(()=>{let obj={...markerlatlng};obj.lat=coords===null||coords===void 0?void 0:coords.latitude;obj.lng=coords===null||coords===void 0?void 0:coords.longitude;console.log('gfgfgfgfgf',obj);// setMarkerlatLng(obj);\n// console.log(\"coords\", obj);\n// setCenter(obj);\n},[coords]);// alert(JSON.stringify(streetviews))\nconsole.log('jkhjhh',typeof[streetviews],streetviews);if(!isLoaded)return/*#__PURE__*/_jsx(\"div\",{children:\"...loading\"});return/*#__PURE__*/_jsx(_Fragment,{children:/*#__PURE__*/_jsxs(\"div\",{className:\"map_area\",style:{width:'100%',height:'400px',overflow:'hidden'},children:[' ',/*#__PURE__*/_jsx(GoogleMap,{mapContainerStyle:containerStyle// center={startPoint ?? (userLatLng ?? (iamFrom === \"StartPoint\" ? startPoint : endPoint))}\n// center={userLatLng}\n,center:markerlatlng,zoom:12// onLoad={onLoad}\n// // onUnmount={onUnmount}\n,onClick:ev=>{let data={lat:ev.latLng.lat(),lng:ev.latLng.lng()};setLongitude(data===null||data===void 0?void 0:data.lng);setaLatitude(data===null||data===void 0?void 0:data.lat);// setStreetView((prevPath) => [...prevPath, data]);\ngeocode(RequestType.LATLNG,\"\".concat(data.lat,\",\").concat(data.lng)).then(_ref3=>{let{results}=_ref3;const address=results[0].formatted_address;const formatedaddress=results[0].address_components;let zipCode='';formatedaddress.forEach(component=>{if(component.types.includes('postal_code')){zipCode=component.long_name;}});setZipcode(zipCode);console.log('address',results[0],address);setAddress(address);setareaName(address);}).catch(err=>{console.log('llkjfrgfg',err);});setMarkerlatLng(data);setCenter(data);// { iamFrom == \"StartPoint\" ? setStartPoint(data) : setendPoint(data) }\nif(startPoint.lat){setendPoint(data);// const lat1 = (startPoint.lat + data.lat) / 2\n// const lat2 = (startPoint.lng + data.lng) / 2\n// setCenter({ lat1, lat2 });\n// alert(\"st\")\n}else{setStartPoint(data);// alert(\"end\")\n}// let temparr = path;\n// temparr.pop()\n// setPath([...temparr, data])\n},onDblClick:ev=>{let data={lat:ev.latLng.lat(),lng:ev.latLng.lng()};setendPoint(data);// setStreetView((prevPath) => [...prevPath, data]);\n// setPath([...path, data])\n},children:/*#__PURE__*/_jsx(MarkerF,{position:markerlatlng})})]})});};export default/*#__PURE__*/React.memo(GogleMapNew);","map":{"version":3,"names":["React","useEffect","useMemo","useRef","useState","GoogleMap","Marker","MarkerF","Polyline","useLoadScript","DistanceMatrixService","DistanceMatrixServiceProps","LoadScript","PolylineF","PolygonF","setDefaults","geocode","RequestType","useGeolocated","turf","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","containerStyle","width","height","marginTop","GogleMapNew","_ref","startPoint","setStartPoint","endPoint","setendPoint","settimeAndDistanceObj","iamFrom","markerlatlng","setMarkerlatLng","setAddress","setLongitude","setaLatitude","console","log","coords","isGeolocationAvailable","isGeolocationEnabled","positionOptions","enableHighAccuracy","userDecisionTimeout","latitude","longitude","userLatLng","lat","lng","searchPlace","setSearchPlace","coordinates","setCoordinates","jobsiteDetail","setJobsiteDetial","areaName","setareaName","location","setLocation","map","setMap","streetviews","setStreetView","DistanceCalculate","point1","point","point2","distance","alert","decode","t","points","step","encoded","polyline","index","len","length","b","shift","result","charAt","charCodeAt","dlat","dlng","push","getAllLocationDatas","apikey","directionsServiceBaseUrl","url","concat","fetch","then","response","json","routes","legs","route","decodepkey","overview_polyline","decodepolyCode","catch","err","temparr","center","setCenter","zipcode","setZipcode","isLoaded","id","googleMapsApiKey","onLoad","useCallback","callback","setZoom","obj","LATLNG","_ref2","results","address","formatted_address","onUnmount","key","language","region","children","className","style","overflow","mapContainerStyle","zoom","onClick","ev","data","latLng","_ref3","formatedaddress","address_components","zipCode","forEach","component","types","includes","long_name","onDblClick","position","memo"],"sources":["D:/NXG_Deploy/Admin/src/page/GogleMapNew.js"],"sourcesContent":["import React, { useEffect, useMemo, useRef, useState } from 'react';\n\nimport {\n  GoogleMap,\n  Marker,\n  MarkerF,\n  Polyline,\n  useLoadScript,\n  DistanceMatrixService,\n  DistanceMatrixServiceProps,\n  LoadScript,\n  PolylineF,\n  PolygonF,\n} from '@react-google-maps/api';\nimport { setDefaults, geocode, RequestType } from 'react-geocode';\nimport { useGeolocated } from 'react-geolocated';\nimport * as turf from '@turf/turf';\n// import { AuthCtx } from \"../../context/CreateContext\";\n\nconst containerStyle = {\n  width: '1600px',\n  height: '1200px',\n  marginTop: '10px',\n};\n\nconst GogleMapNew = ({\n  startPoint,\n  setStartPoint,\n  endPoint,\n  setendPoint,\n  settimeAndDistanceObj,\n  iamFrom,\n  markerlatlng,\n  setMarkerlatLng,\n  setAddress,\n  setLongitude,\n  setaLatitude,\n}) => {\n  console.log('start&EndPoint', endPoint, startPoint, markerlatlng);\n\n  const { coords, isGeolocationAvailable, isGeolocationEnabled } = useGeolocated({\n    positionOptions: {\n      enableHighAccuracy: true,\n    },\n    userDecisionTimeout: 5000,\n  });\n\n  console.log('coords', markerlatlng, coords, coords?.latitude, coords?.longitude);\n\n  //for current location\n  const userLatLng = { lat: coords?.latitude, lng: coords?.longitude };\n\n  const [searchPlace, setSearchPlace] = useState();\n  const [coordinates, setCoordinates] = useState([]);\n  const [jobsiteDetail, setJobsiteDetial] = useState(null);\n  const [areaName, setareaName] = useState('');\n  const [location, setLocation] = useState('');\n  const [map, setMap] = useState(null);\n  const [streetviews, setStreetView] = useState([\n    { lat: 22.5734215, lng: 88.4320514 },\n    { lat: 22.5731111, lng: 77.3320514 },\n    // Add more points as needed\n  ]);\n\n  console.log(streetviews, 'kjfhsh');\n\n  const DistanceCalculate = () => {\n    if (startPoint && endPoint) {\n      console.log(startPoint, endPoint, 'uuhe');\n      const point1 = turf.point([startPoint.lat, startPoint.lng]);\n      const point2 = turf.point([endPoint.lat, endPoint.lng]);\n\n      // Calculate distance in kilometers\n      const distance = turf.distance(point1, point2);\n\n      alert(distance);\n    }\n  };\n\n  const decode = t => {\n    let points = [];\n    for (let step of t) {\n      let encoded = step.polyline.points;\n      let index = 0,\n        len = encoded.length;\n      let lat = 0,\n        lng = 0;\n      while (index < len) {\n        let b,\n          shift = 0,\n          result = 0;\n        do {\n          b = encoded.charAt(index++).charCodeAt(0) - 63;\n          result |= (b & 0x1f) << shift;\n          shift += 5;\n        } while (b >= 0x20);\n\n        let dlat = (result & 1) != 0 ? ~(result >> 1) : result >> 1;\n        lat += dlat;\n        shift = 0;\n        result = 0;\n        do {\n          b = encoded.charAt(index++).charCodeAt(0) - 63;\n          result |= (b & 0x1f) << shift;\n          shift += 5;\n        } while (b >= 0x20);\n        let dlng = (result & 1) != 0 ? ~(result >> 1) : result >> 1;\n        lng += dlng;\n\n        points.push({ latitude: lat / 1e5, longitude: lng / 1e5 });\n      }\n    }\n    return points;\n  };\n\n  //for geting distance and path\n  const getAllLocationDatas = () => {\n    console.log('startPoint', startPoint);\n    const apikey = 'AIzaSyAMkH3YDYb_ZJJvtuuEl_Grwc6u9U_yuSM';\n    const directionsServiceBaseUrl = 'https://maps.googleapis.com/maps/api/directions/json';\n\n    const url = `${directionsServiceBaseUrl}?origin=${startPoint.lat},${startPoint.lng}&destination=${endPoint.lat},${endPoint.lng}&key=${apikey}&mode=driving&language=English`;\n\n    console.log('url', url);\n    fetch(url)\n      .then(response => response.json())\n      .then(json => {\n        // if (json.status !== 'OK') {\n        //     const errorMessage = json.error_message || json.status || 'Unknown error';\n        //     return Promise.reject(errorMessage);\n        // }\n\n        console.log('ppwqo', json.routes[0].legs[0]);\n        if (json.routes.length) {\n          const route = json.routes[0];\n\n          const decodepkey = route.overview_polyline;\n          const decodepolyCode = decode([{ polyline: decodepkey }]);\n          setStreetView(decodepolyCode);\n          settimeAndDistanceObj(json.routes[0].legs[0]);\n          console.log('rrrw', decodepolyCode);\n        }\n      })\n      .catch(err => {\n        console.log(err);\n        // alert(err)\n      });\n  };\n\n  useEffect(() => {\n    let temparr = [];\n    temparr.push(startPoint);\n    temparr.push(endPoint);\n    // setPath(temparr)\n    console.log('startPoints', startPoint, endPoint);\n\n    console.log(endPoint, startPoint);\n\n    if (startPoint) {\n      startPoint && getAllLocationDatas();\n    }\n    // endPoint && startPoint && DistanceCalculate()\n  }, [endPoint]);\n\n  const [center, setCenter] = useState({\n    lat: 37.0902,\n    lng: 95.7129,\n  });\n  // const { setAddress, address } = AuthCtx();\n\n  console.log('AAAAASD', markerlatlng);\n  const [zipcode, setZipcode] = useState('');\n  const { isLoaded } = useLoadScript({\n    id: 'google-map-script',\n    googleMapsApiKey: 'AIzaSyC-ki3ImgxYzo8K2OCH9yDthHWIWV1yfj4',\n    // libraries: [\"places\"],\n  });\n\n  const onLoad = React.useCallback(\n    function callback(map) {\n      // alert('jfjdkfjd')\n      setMap(map);\n\n      map.setZoom(12);\n\n      console.log('address', `${center.lat},${center.lng}`);\n\n      let obj = { ...markerlatlng };\n      obj.lat = coords?.latitude;\n      obj.lng = coords?.longitude;\n      setMarkerlatLng(obj);\n\n      setCenter(obj);\n\n      geocode(RequestType.LATLNG, `${center.lat},${center.lng}`).then(({ results }) => {\n        const address = results[0].formatted_address;\n\n        setareaName(address);\n      });\n    },\n    [center, coords]\n  );\n\n  const onUnmount = React.useCallback(function callback(map) {\n    alert('Hii');\n    setMap(null);\n    setCenter({\n      lat: 37.0902,\n      lng: 95.7129,\n    });\n  }, []);\n\n  // console.log(\"markerlatlng\", markerlatlng);\n\n  setDefaults({\n    key: 'AIzaSyC-ki3ImgxYzo8K2OCH9yDthHWIWV1yfj4',\n    language: 'en',\n    region: 'es',\n  });\n\n  // useEffect(() => {\n  //     let obj = {\n  //         latLng: markerlatlng,\n  //         area: areaName,\n  //         zipcode: zipcode,\n  //     };\n  //     // setAddress(obj);\n  // }, [areaName, markerlatlng]);\n\n  useEffect(() => {\n    let obj = { ...markerlatlng };\n    obj.lat = coords?.latitude;\n    obj.lng = coords?.longitude;\n    console.log('gfgfgfgfgf', obj);\n    // setMarkerlatLng(obj);\n    // console.log(\"coords\", obj);\n    // setCenter(obj);\n  }, [coords]);\n  // alert(JSON.stringify(streetviews))\n  console.log('jkhjhh', typeof [streetviews], streetviews);\n\n  if (!isLoaded) return <div>...loading</div>;\n  return (\n    <>\n      <div className=\"map_area\" style={{ width: '100%', height: '400px', overflow: 'hidden' }}>\n        {' '}\n        {/* MAp area */}\n        {/* <LoadScript googleMapsApiKey=\"AIzaSyC-ki3ImgxYzo8K2OCH9yDthHWIWV1yfj4\"> */}\n        <GoogleMap\n          mapContainerStyle={containerStyle}\n          // center={startPoint ?? (userLatLng ?? (iamFrom === \"StartPoint\" ? startPoint : endPoint))}\n          // center={userLatLng}\n          center={markerlatlng}\n          zoom={12}\n          // onLoad={onLoad}\n          // // onUnmount={onUnmount}\n          onClick={ev => {\n            let data = {\n              lat: ev.latLng.lat(),\n              lng: ev.latLng.lng(),\n            };\n\n            setLongitude(data?.lng);\n            setaLatitude(data?.lat);\n            // setStreetView((prevPath) => [...prevPath, data]);\n\n            geocode(RequestType.LATLNG, `${data.lat},${data.lng}`)\n              .then(({ results }) => {\n                const address = results[0].formatted_address;\n                const formatedaddress = results[0].address_components;\n                let zipCode = '';\n                formatedaddress.forEach(component => {\n                  if (component.types.includes('postal_code')) {\n                    zipCode = component.long_name;\n                  }\n                });\n                setZipcode(zipCode);\n                console.log('address', results[0], address);\n                setAddress(address);\n                setareaName(address);\n              })\n              .catch(err => {\n                console.log('llkjfrgfg', err);\n              });\n            setMarkerlatLng(data);\n            setCenter(data);\n\n            // { iamFrom == \"StartPoint\" ? setStartPoint(data) : setendPoint(data) }\n\n            if (startPoint.lat) {\n              setendPoint(data);\n              // const lat1 = (startPoint.lat + data.lat) / 2\n              // const lat2 = (startPoint.lng + data.lng) / 2\n              // setCenter({ lat1, lat2 });\n              // alert(\"st\")\n            } else {\n              setStartPoint(data);\n              // alert(\"end\")\n            }\n            // let temparr = path;\n            // temparr.pop()\n            // setPath([...temparr, data])\n          }}\n          onDblClick={ev => {\n            let data = {\n              lat: ev.latLng.lat(),\n              lng: ev.latLng.lng(),\n            };\n            setendPoint(data);\n            // setStreetView((prevPath) => [...prevPath, data]);\n            // setPath([...path, data])\n          }}\n        >\n          <MarkerF position={markerlatlng} />\n\n          {/* <MarkerF position={endPoint ?? markerlatlng} title=\"EndPoint\" /> */}\n        </GoogleMap>\n        {/* </LoadScript > */}\n        {/* <img src={mapImg} className=\"img-fluid\" alt='map' style={{ width: \"100%\", height: \"100%\", }} /> */}\n      </div>\n    </>\n  );\n};\n\nexport default React.memo(GogleMapNew);\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}